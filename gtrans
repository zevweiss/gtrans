#!/bin/bash

set -e
set -u

gapikey=$(<google_api_key.txt)
apiurl="https://www.googleapis.com/language/translate/v2"

srclang=""
targlang=en
verbose=""
quiet=false

usage()
{
	echo "$0: [-s LANG] [-t LANG] [-v] [-q] [TEXT...]"
	echo "  -s LANG: set LANG as \"from\" language (default: autodetect)"
	echo "  -t LANG: set LANG as \"to\" language (default: en)"
	echo "  -v: verbose mode"
	echo "  -q: don't print autodetected language to stderr"
	echo "LANGs are two-letter language codes, e.g. en=English, es=Spanish, de=German, etc."
	echo "If TEXT is omitted or -, text is read from stdin."
}

while getopts s:t:vq opt; do
	case $opt in
	s)
		srclang="$OPTARG" ;;
	t)
		targlang="$OPTARG" ;;
	v)
		verbose="-v" ;;
	q)
		quiet=true ;;
	*)
		usage 1>&2
		exit 1
	esac
done

if [ "$srclang" == "$targlang" ]; then
	echo "Error: source and target languages must be different" 1>&2
	exit 2
fi

shift $((OPTIND-1))

if [[ $# == 0 ||  "$@" == "-" ]]; then
	srctxt=`cat`
else
	srctxt="$@"
fi

apiparms=''
apiparms+=" -d key=$gapikey"
apiparms+=" -d prettyprint=true"
if [ -n "$srclang" ]; then
	apiparms+=" -d source=$srclang"
fi
apiparms+=" -d target=$targlang"

response=`curl $verbose -S -s -G $apiparms --data-urlencode "q=$srctxt" "$apiurl"`

if [ "$verbose" == -v ]; then
	echo "$response" 1>&2
fi

extract()
{
	local sedcmd="s/^[[:space:]]*\"$1\": \"([^\"]*)\",?$/\1/g; t; d;"
	sed -r "$sedcmd"
}

esc_chars="'"
esc_sed=''
for c in $esc_chars; do
	dec=`echo -n "$c" | hexdump -e '/1 "%d"'`
	esc_sed+="s/&#$dec;/$c/g; "
done

unescape()
{
	sed -r "$esc_sed"
}

result=`extract translatedText <<<"$response" | unescape`

if [ -z "$srclang" ] && ! $quiet; then
	guessedlang=`extract detectedSourceLanguage <<<"$response"`
	echo "[detected source language: $guessedlang]" 1>&2
fi

echo "$result"
